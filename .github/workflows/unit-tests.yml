name: "Unit tests"

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-18.04
    continue-on-error: ${{ matrix.experimental }} # Experimental builds may fail

    defaults:
      run:
        shell: bash -l -e -o pipefail {0}

    env:
      WSI_CONDA_CHANNEL: "https://dnap.cog.sanger.ac.uk/npg/conda/devel/generic"
      CONDA_TEST_ENVIRONMENT: "testenv"

    strategy:
      matrix:
        python: [ "3.9" ]
        baton: [ "2.1.0" ]
        experimental: [false]
        include:
          - irods: "4.2.7"
            server_image: "wsinpg/ub-16.04-irods-4.2.7:latest"
            experimental: false
          - irods: "4.2.8"
            server_image: "wsinpg/ub-18.04-irods-4.2.8:latest"
            experimental: true

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: null
          # MYSQL_DATABASE:

      irods:
        image: ${{ matrix.server_image }}
        ports:
          - 1247:1247
          - 20000-20199:20000-20199

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: "Initialize Miniconda"
        run: |
          echo 'source $CONDA/etc/profile.d/conda.sh' >> "$HOME/.bash_profile"

      - name: "Configure Miniconda"
        run: |
          conda config --prepend pkgs_dirs "$HOME/conda/pkgs"
          conda config --prepend envs_dirs "$HOME/conda/envs"

          conda config --set auto_update_conda False
          conda config --prepend channels "$WSI_CONDA_CHANNEL"
          conda config --append channels conda-forge
          conda info

      - name: "Install iRODS clients"
        run: |
          conda create -y -n "$CONDA_TEST_ENVIRONMENT"
          conda install -y -n "$CONDA_TEST_ENVIRONMENT" "irods-icommands ==${{ matrix.irods }}"
          conda install -y -n "$CONDA_TEST_ENVIRONMENT" "baton ==${{ matrix.baton }}"

      - name: "Configure iRODS clients"
        run: |
          conda activate "$CONDA_TEST_ENVIRONMENT"

          mkdir -p "$HOME/.irods"
          cat <<'EOF' > "$HOME/.irods/irods_environment.json"
          {
              "irods_host": "localhost",
              "irods_port": 1247,
              "irods_user_name": "irods",
              "irods_zone_name": "testZone",
              "irods_home": "/testZone/home/irods",
              "irods_default_resource": "testResc"
          }
          EOF

          echo "irods" | script -q -c "iinit" /dev/null
          ienv
          ils

          baton-do --version

      - name: "Install dependencies"
        run: |
          conda activate "$CONDA_TEST_ENVIRONMENT"
          conda install -y -c defaults --file requirements.txt
          grep -v pytest-it test-requirements.txt |\
            xargs -n 1 -I {} conda install -y -c defaults {}

          pip install pytest-it==0.1.4

      - name: "Run tests"
        run: |
          conda activate "$CONDA_TEST_ENVIRONMENT"
          pytest --it
